/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.11.2
 * source: hub/activity/gmactivity.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../gateway-models/appliances/appliance_constants";
import * as dependency_2 from "./../gateway-models/groups/group_constants";
import * as pb_1 from "google-protobuf";
export namespace com.keus.gateway {
    export class ActivitySourceInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            last_update_time?: number;
            last_updated_by?: string;
            last_update_user?: string;
            last_update_source?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("last_update_time" in data && data.last_update_time != undefined) {
                    this.last_update_time = data.last_update_time;
                }
                if ("last_updated_by" in data && data.last_updated_by != undefined) {
                    this.last_updated_by = data.last_updated_by;
                }
                if ("last_update_user" in data && data.last_update_user != undefined) {
                    this.last_update_user = data.last_update_user;
                }
                if ("last_update_source" in data && data.last_update_source != undefined) {
                    this.last_update_source = data.last_update_source;
                }
            }
        }
        get last_update_time() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set last_update_time(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get last_updated_by() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set last_updated_by(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get last_update_user() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set last_update_user(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get last_update_source() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set last_update_source(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            last_update_time?: number;
            last_updated_by?: string;
            last_update_user?: string;
            last_update_source?: string;
        }): ActivitySourceInfo {
            const message = new ActivitySourceInfo({});
            if (data.last_update_time != null) {
                message.last_update_time = data.last_update_time;
            }
            if (data.last_updated_by != null) {
                message.last_updated_by = data.last_updated_by;
            }
            if (data.last_update_user != null) {
                message.last_update_user = data.last_update_user;
            }
            if (data.last_update_source != null) {
                message.last_update_source = data.last_update_source;
            }
            return message;
        }
        toObject() {
            const data: {
                last_update_time?: number;
                last_updated_by?: string;
                last_update_user?: string;
                last_update_source?: string;
            } = {};
            if (this.last_update_time != null) {
                data.last_update_time = this.last_update_time;
            }
            if (this.last_updated_by != null) {
                data.last_updated_by = this.last_updated_by;
            }
            if (this.last_update_user != null) {
                data.last_update_user = this.last_update_user;
            }
            if (this.last_update_source != null) {
                data.last_update_source = this.last_update_source;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.last_update_time != 0)
                writer.writeInt64(1, this.last_update_time);
            if (this.last_updated_by.length)
                writer.writeString(2, this.last_updated_by);
            if (this.last_update_user.length)
                writer.writeString(3, this.last_update_user);
            if (this.last_update_source.length)
                writer.writeString(4, this.last_update_source);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ActivitySourceInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ActivitySourceInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.last_update_time = reader.readInt64();
                        break;
                    case 2:
                        message.last_updated_by = reader.readString();
                        break;
                    case 3:
                        message.last_update_user = reader.readString();
                        break;
                    case 4:
                        message.last_update_source = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ActivitySourceInfo {
            return ActivitySourceInfo.deserialize(bytes);
        }
    }
    export class ApplianceActivityIdentifier extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            appliance_id?: string;
            appliance_name?: string;
            appliance_room_name?: string;
            appliance_section_name?: string;
            appliance_room_id?: string;
            appliance_section_id?: string;
            appliance_icon?: dependency_1.com.keus.gateway.APPLIANCE_ICONS;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("appliance_id" in data && data.appliance_id != undefined) {
                    this.appliance_id = data.appliance_id;
                }
                if ("appliance_name" in data && data.appliance_name != undefined) {
                    this.appliance_name = data.appliance_name;
                }
                if ("appliance_room_name" in data && data.appliance_room_name != undefined) {
                    this.appliance_room_name = data.appliance_room_name;
                }
                if ("appliance_section_name" in data && data.appliance_section_name != undefined) {
                    this.appliance_section_name = data.appliance_section_name;
                }
                if ("appliance_room_id" in data && data.appliance_room_id != undefined) {
                    this.appliance_room_id = data.appliance_room_id;
                }
                if ("appliance_section_id" in data && data.appliance_section_id != undefined) {
                    this.appliance_section_id = data.appliance_section_id;
                }
                if ("appliance_icon" in data && data.appliance_icon != undefined) {
                    this.appliance_icon = data.appliance_icon;
                }
            }
        }
        get appliance_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set appliance_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get appliance_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set appliance_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get appliance_room_name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set appliance_room_name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get appliance_section_name() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set appliance_section_name(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get appliance_room_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set appliance_room_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get appliance_section_id() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set appliance_section_id(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get appliance_icon() {
            return pb_1.Message.getFieldWithDefault(this, 7, dependency_1.com.keus.gateway.APPLIANCE_ICONS.DOWN_LIGHT) as dependency_1.com.keus.gateway.APPLIANCE_ICONS;
        }
        set appliance_icon(value: dependency_1.com.keus.gateway.APPLIANCE_ICONS) {
            pb_1.Message.setField(this, 7, value);
        }
        static fromObject(data: {
            appliance_id?: string;
            appliance_name?: string;
            appliance_room_name?: string;
            appliance_section_name?: string;
            appliance_room_id?: string;
            appliance_section_id?: string;
            appliance_icon?: dependency_1.com.keus.gateway.APPLIANCE_ICONS;
        }): ApplianceActivityIdentifier {
            const message = new ApplianceActivityIdentifier({});
            if (data.appliance_id != null) {
                message.appliance_id = data.appliance_id;
            }
            if (data.appliance_name != null) {
                message.appliance_name = data.appliance_name;
            }
            if (data.appliance_room_name != null) {
                message.appliance_room_name = data.appliance_room_name;
            }
            if (data.appliance_section_name != null) {
                message.appliance_section_name = data.appliance_section_name;
            }
            if (data.appliance_room_id != null) {
                message.appliance_room_id = data.appliance_room_id;
            }
            if (data.appliance_section_id != null) {
                message.appliance_section_id = data.appliance_section_id;
            }
            if (data.appliance_icon != null) {
                message.appliance_icon = data.appliance_icon;
            }
            return message;
        }
        toObject() {
            const data: {
                appliance_id?: string;
                appliance_name?: string;
                appliance_room_name?: string;
                appliance_section_name?: string;
                appliance_room_id?: string;
                appliance_section_id?: string;
                appliance_icon?: dependency_1.com.keus.gateway.APPLIANCE_ICONS;
            } = {};
            if (this.appliance_id != null) {
                data.appliance_id = this.appliance_id;
            }
            if (this.appliance_name != null) {
                data.appliance_name = this.appliance_name;
            }
            if (this.appliance_room_name != null) {
                data.appliance_room_name = this.appliance_room_name;
            }
            if (this.appliance_section_name != null) {
                data.appliance_section_name = this.appliance_section_name;
            }
            if (this.appliance_room_id != null) {
                data.appliance_room_id = this.appliance_room_id;
            }
            if (this.appliance_section_id != null) {
                data.appliance_section_id = this.appliance_section_id;
            }
            if (this.appliance_icon != null) {
                data.appliance_icon = this.appliance_icon;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.appliance_id.length)
                writer.writeString(1, this.appliance_id);
            if (this.appliance_name.length)
                writer.writeString(2, this.appliance_name);
            if (this.appliance_room_name.length)
                writer.writeString(3, this.appliance_room_name);
            if (this.appliance_section_name.length)
                writer.writeString(4, this.appliance_section_name);
            if (this.appliance_room_id.length)
                writer.writeString(5, this.appliance_room_id);
            if (this.appliance_section_id.length)
                writer.writeString(6, this.appliance_section_id);
            if (this.appliance_icon != dependency_1.com.keus.gateway.APPLIANCE_ICONS.DOWN_LIGHT)
                writer.writeEnum(7, this.appliance_icon);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApplianceActivityIdentifier {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ApplianceActivityIdentifier();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.appliance_id = reader.readString();
                        break;
                    case 2:
                        message.appliance_name = reader.readString();
                        break;
                    case 3:
                        message.appliance_room_name = reader.readString();
                        break;
                    case 4:
                        message.appliance_section_name = reader.readString();
                        break;
                    case 5:
                        message.appliance_room_id = reader.readString();
                        break;
                    case 6:
                        message.appliance_section_id = reader.readString();
                        break;
                    case 7:
                        message.appliance_icon = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ApplianceActivityIdentifier {
            return ApplianceActivityIdentifier.deserialize(bytes);
        }
    }
    export class GroupActivityIdentifier extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_name?: string;
            group_room_name?: string;
            group_section_name?: string;
            group_room_id?: string;
            group_section_id?: string;
            group_icon?: dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_name" in data && data.group_name != undefined) {
                    this.group_name = data.group_name;
                }
                if ("group_room_name" in data && data.group_room_name != undefined) {
                    this.group_room_name = data.group_room_name;
                }
                if ("group_section_name" in data && data.group_section_name != undefined) {
                    this.group_section_name = data.group_section_name;
                }
                if ("group_room_id" in data && data.group_room_id != undefined) {
                    this.group_room_id = data.group_room_id;
                }
                if ("group_section_id" in data && data.group_section_id != undefined) {
                    this.group_section_id = data.group_section_id;
                }
                if ("group_icon" in data && data.group_icon != undefined) {
                    this.group_icon = data.group_icon;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get group_room_name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set group_room_name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get group_section_name() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set group_section_name(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get group_room_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set group_room_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get group_section_id() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set group_section_id(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get group_icon() {
            return pb_1.Message.getFieldWithDefault(this, 7, dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT) as dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }
        set group_icon(value: dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS) {
            pb_1.Message.setField(this, 7, value);
        }
        static fromObject(data: {
            group_id?: string;
            group_name?: string;
            group_room_name?: string;
            group_section_name?: string;
            group_room_id?: string;
            group_section_id?: string;
            group_icon?: dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }): GroupActivityIdentifier {
            const message = new GroupActivityIdentifier({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_name != null) {
                message.group_name = data.group_name;
            }
            if (data.group_room_name != null) {
                message.group_room_name = data.group_room_name;
            }
            if (data.group_section_name != null) {
                message.group_section_name = data.group_section_name;
            }
            if (data.group_room_id != null) {
                message.group_room_id = data.group_room_id;
            }
            if (data.group_section_id != null) {
                message.group_section_id = data.group_section_id;
            }
            if (data.group_icon != null) {
                message.group_icon = data.group_icon;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_name?: string;
                group_room_name?: string;
                group_section_name?: string;
                group_room_id?: string;
                group_section_id?: string;
                group_icon?: dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_name != null) {
                data.group_name = this.group_name;
            }
            if (this.group_room_name != null) {
                data.group_room_name = this.group_room_name;
            }
            if (this.group_section_name != null) {
                data.group_section_name = this.group_section_name;
            }
            if (this.group_room_id != null) {
                data.group_room_id = this.group_room_id;
            }
            if (this.group_section_id != null) {
                data.group_section_id = this.group_section_id;
            }
            if (this.group_icon != null) {
                data.group_icon = this.group_icon;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.group_name.length)
                writer.writeString(2, this.group_name);
            if (this.group_room_name.length)
                writer.writeString(3, this.group_room_name);
            if (this.group_section_name.length)
                writer.writeString(4, this.group_section_name);
            if (this.group_room_id.length)
                writer.writeString(5, this.group_room_id);
            if (this.group_section_id.length)
                writer.writeString(6, this.group_section_id);
            if (this.group_icon != dependency_2.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT)
                writer.writeEnum(7, this.group_icon);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GroupActivityIdentifier {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GroupActivityIdentifier();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.group_name = reader.readString();
                        break;
                    case 3:
                        message.group_room_name = reader.readString();
                        break;
                    case 4:
                        message.group_section_name = reader.readString();
                        break;
                    case 5:
                        message.group_room_id = reader.readString();
                        break;
                    case 6:
                        message.group_section_id = reader.readString();
                        break;
                    case 7:
                        message.group_icon = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GroupActivityIdentifier {
            return GroupActivityIdentifier.deserialize(bytes);
        }
    }
    export class SceneActivityIdentifier extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            scene_id?: number;
            scene_name?: string;
            scene_room_name?: string;
            scene_section_name?: string;
            scene_room_id?: string;
            scene_section_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("scene_id" in data && data.scene_id != undefined) {
                    this.scene_id = data.scene_id;
                }
                if ("scene_name" in data && data.scene_name != undefined) {
                    this.scene_name = data.scene_name;
                }
                if ("scene_room_name" in data && data.scene_room_name != undefined) {
                    this.scene_room_name = data.scene_room_name;
                }
                if ("scene_section_name" in data && data.scene_section_name != undefined) {
                    this.scene_section_name = data.scene_section_name;
                }
                if ("scene_room_id" in data && data.scene_room_id != undefined) {
                    this.scene_room_id = data.scene_room_id;
                }
                if ("scene_section_id" in data && data.scene_section_id != undefined) {
                    this.scene_section_id = data.scene_section_id;
                }
            }
        }
        get scene_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set scene_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get scene_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set scene_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get scene_room_name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set scene_room_name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get scene_section_name() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set scene_section_name(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get scene_room_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set scene_room_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get scene_section_id() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set scene_section_id(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            scene_id?: number;
            scene_name?: string;
            scene_room_name?: string;
            scene_section_name?: string;
            scene_room_id?: string;
            scene_section_id?: string;
        }): SceneActivityIdentifier {
            const message = new SceneActivityIdentifier({});
            if (data.scene_id != null) {
                message.scene_id = data.scene_id;
            }
            if (data.scene_name != null) {
                message.scene_name = data.scene_name;
            }
            if (data.scene_room_name != null) {
                message.scene_room_name = data.scene_room_name;
            }
            if (data.scene_section_name != null) {
                message.scene_section_name = data.scene_section_name;
            }
            if (data.scene_room_id != null) {
                message.scene_room_id = data.scene_room_id;
            }
            if (data.scene_section_id != null) {
                message.scene_section_id = data.scene_section_id;
            }
            return message;
        }
        toObject() {
            const data: {
                scene_id?: number;
                scene_name?: string;
                scene_room_name?: string;
                scene_section_name?: string;
                scene_room_id?: string;
                scene_section_id?: string;
            } = {};
            if (this.scene_id != null) {
                data.scene_id = this.scene_id;
            }
            if (this.scene_name != null) {
                data.scene_name = this.scene_name;
            }
            if (this.scene_room_name != null) {
                data.scene_room_name = this.scene_room_name;
            }
            if (this.scene_section_name != null) {
                data.scene_section_name = this.scene_section_name;
            }
            if (this.scene_room_id != null) {
                data.scene_room_id = this.scene_room_id;
            }
            if (this.scene_section_id != null) {
                data.scene_section_id = this.scene_section_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.scene_id != 0)
                writer.writeInt32(1, this.scene_id);
            if (this.scene_name.length)
                writer.writeString(2, this.scene_name);
            if (this.scene_room_name.length)
                writer.writeString(3, this.scene_room_name);
            if (this.scene_section_name.length)
                writer.writeString(4, this.scene_section_name);
            if (this.scene_room_id.length)
                writer.writeString(5, this.scene_room_id);
            if (this.scene_section_id.length)
                writer.writeString(6, this.scene_section_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneActivityIdentifier {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneActivityIdentifier();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.scene_id = reader.readInt32();
                        break;
                    case 2:
                        message.scene_name = reader.readString();
                        break;
                    case 3:
                        message.scene_room_name = reader.readString();
                        break;
                    case 4:
                        message.scene_section_name = reader.readString();
                        break;
                    case 5:
                        message.scene_room_id = reader.readString();
                        break;
                    case 6:
                        message.scene_section_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SceneActivityIdentifier {
            return SceneActivityIdentifier.deserialize(bytes);
        }
    }
    export class ActivityIdentifierInfo extends pb_1.Message {
        #one_of_decls: number[][] = [[100, 101, 102]];
        constructor(data?: any[] | ({} & (({
            appliance_identifier_info?: ApplianceActivityIdentifier;
            group_identifier_info?: never;
            scene_identifier_info?: never;
        } | {
            appliance_identifier_info?: never;
            group_identifier_info?: GroupActivityIdentifier;
            scene_identifier_info?: never;
        } | {
            appliance_identifier_info?: never;
            group_identifier_info?: never;
            scene_identifier_info?: SceneActivityIdentifier;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("appliance_identifier_info" in data && data.appliance_identifier_info != undefined) {
                    this.appliance_identifier_info = data.appliance_identifier_info;
                }
                if ("group_identifier_info" in data && data.group_identifier_info != undefined) {
                    this.group_identifier_info = data.group_identifier_info;
                }
                if ("scene_identifier_info" in data && data.scene_identifier_info != undefined) {
                    this.scene_identifier_info = data.scene_identifier_info;
                }
            }
        }
        get appliance_identifier_info() {
            return pb_1.Message.getWrapperField(this, ApplianceActivityIdentifier, 100) as ApplianceActivityIdentifier;
        }
        set appliance_identifier_info(value: ApplianceActivityIdentifier) {
            pb_1.Message.setOneofWrapperField(this, 100, this.#one_of_decls[0], value);
        }
        get has_appliance_identifier_info() {
            return pb_1.Message.getField(this, 100) != null;
        }
        get group_identifier_info() {
            return pb_1.Message.getWrapperField(this, GroupActivityIdentifier, 101) as GroupActivityIdentifier;
        }
        set group_identifier_info(value: GroupActivityIdentifier) {
            pb_1.Message.setOneofWrapperField(this, 101, this.#one_of_decls[0], value);
        }
        get has_group_identifier_info() {
            return pb_1.Message.getField(this, 101) != null;
        }
        get scene_identifier_info() {
            return pb_1.Message.getWrapperField(this, SceneActivityIdentifier, 102) as SceneActivityIdentifier;
        }
        set scene_identifier_info(value: SceneActivityIdentifier) {
            pb_1.Message.setOneofWrapperField(this, 102, this.#one_of_decls[0], value);
        }
        get has_scene_identifier_info() {
            return pb_1.Message.getField(this, 102) != null;
        }
        get activity_identifier() {
            const cases: {
                [index: number]: "none" | "appliance_identifier_info" | "group_identifier_info" | "scene_identifier_info";
            } = {
                0: "none",
                100: "appliance_identifier_info",
                101: "group_identifier_info",
                102: "scene_identifier_info"
            };
            return cases[pb_1.Message.computeOneofCase(this, [100, 101, 102])];
        }
        static fromObject(data: {
            appliance_identifier_info?: ReturnType<typeof ApplianceActivityIdentifier.prototype.toObject>;
            group_identifier_info?: ReturnType<typeof GroupActivityIdentifier.prototype.toObject>;
            scene_identifier_info?: ReturnType<typeof SceneActivityIdentifier.prototype.toObject>;
        }): ActivityIdentifierInfo {
            const message = new ActivityIdentifierInfo({});
            if (data.appliance_identifier_info != null) {
                message.appliance_identifier_info = ApplianceActivityIdentifier.fromObject(data.appliance_identifier_info);
            }
            if (data.group_identifier_info != null) {
                message.group_identifier_info = GroupActivityIdentifier.fromObject(data.group_identifier_info);
            }
            if (data.scene_identifier_info != null) {
                message.scene_identifier_info = SceneActivityIdentifier.fromObject(data.scene_identifier_info);
            }
            return message;
        }
        toObject() {
            const data: {
                appliance_identifier_info?: ReturnType<typeof ApplianceActivityIdentifier.prototype.toObject>;
                group_identifier_info?: ReturnType<typeof GroupActivityIdentifier.prototype.toObject>;
                scene_identifier_info?: ReturnType<typeof SceneActivityIdentifier.prototype.toObject>;
            } = {};
            if (this.appliance_identifier_info != null) {
                data.appliance_identifier_info = this.appliance_identifier_info.toObject();
            }
            if (this.group_identifier_info != null) {
                data.group_identifier_info = this.group_identifier_info.toObject();
            }
            if (this.scene_identifier_info != null) {
                data.scene_identifier_info = this.scene_identifier_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_appliance_identifier_info)
                writer.writeMessage(100, this.appliance_identifier_info, () => this.appliance_identifier_info.serialize(writer));
            if (this.has_group_identifier_info)
                writer.writeMessage(101, this.group_identifier_info, () => this.group_identifier_info.serialize(writer));
            if (this.has_scene_identifier_info)
                writer.writeMessage(102, this.scene_identifier_info, () => this.scene_identifier_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ActivityIdentifierInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ActivityIdentifierInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 100:
                        reader.readMessage(message.appliance_identifier_info, () => message.appliance_identifier_info = ApplianceActivityIdentifier.deserialize(reader));
                        break;
                    case 101:
                        reader.readMessage(message.group_identifier_info, () => message.group_identifier_info = GroupActivityIdentifier.deserialize(reader));
                        break;
                    case 102:
                        reader.readMessage(message.scene_identifier_info, () => message.scene_identifier_info = SceneActivityIdentifier.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ActivityIdentifierInfo {
            return ActivityIdentifierInfo.deserialize(bytes);
        }
    }
}
