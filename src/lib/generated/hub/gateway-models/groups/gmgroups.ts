/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.11.2
 * source: hub/gateway-models/groups/gmgroups.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../appliances/appliance-types/switch";
import * as dependency_2 from "./../appliances/appliance-types/dimmer";
import * as dependency_3 from "./../appliances/appliance-types/rgbcolor";
import * as dependency_4 from "./../appliances/appliance-types/wwmixer";
import * as dependency_5 from "./group_constants";
import * as dependency_6 from "./../../activity/gmactivity";
import * as dependency_7 from "./../appliances/appliance";
import * as dependency_8 from "./../protocols/keus-zigbee/group/keuszigbee_group";
import * as dependency_9 from "./../protocols/Ip/group/ip_group";
import * as pb_1 from "google-protobuf";
export namespace com.keus.gateway {
    export enum GMGROUP_SYNC_STATES {
        GMGSS_INSYNC = 0,
        GMGSS_SYNCPENDING = 1,
        GMGSS_SYNCFAILED = 2
    }
    export enum GMGROUP_SYNC_REQUEST_TYPES {
        GMGSRT_NONE = 0,
        GMGSRT_CONFIGURE = 1,
        GMGSRT_DELETE = 2,
        GMGSRT_APPL_DELETE = 3,
        GMSRT_SET_DEFAULT_STATE = 4
    }
    export class GMGroupHomeInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_room?: string;
            group_section?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_room" in data && data.group_room != undefined) {
                    this.group_room = data.group_room;
                }
                if ("group_section" in data && data.group_section != undefined) {
                    this.group_section = data.group_section;
                }
            }
        }
        get group_room() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_room(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_section() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_section(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_room?: string;
            group_section?: string;
        }): GMGroupHomeInfo {
            const message = new GMGroupHomeInfo({});
            if (data.group_room != null) {
                message.group_room = data.group_room;
            }
            if (data.group_section != null) {
                message.group_section = data.group_section;
            }
            return message;
        }
        toObject() {
            const data: {
                group_room?: string;
                group_section?: string;
            } = {};
            if (this.group_room != null) {
                data.group_room = this.group_room;
            }
            if (this.group_section != null) {
                data.group_section = this.group_section;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_room.length)
                writer.writeString(1, this.group_room);
            if (this.group_section.length)
                writer.writeString(2, this.group_section);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupHomeInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupHomeInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_room = reader.readString();
                        break;
                    case 2:
                        message.group_section = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupHomeInfo {
            return GMGroupHomeInfo.deserialize(bytes);
        }
    }
    export class GMGroupSyncInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            sync_status?: GMGROUP_SYNC_STATES;
            sync_request_type?: GMGROUP_SYNC_REQUEST_TYPES;
            sync_request_id?: string;
            sync_request_time?: number;
            sync_request_params?: string;
            job_type_name?: string;
            job_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("sync_status" in data && data.sync_status != undefined) {
                    this.sync_status = data.sync_status;
                }
                if ("sync_request_type" in data && data.sync_request_type != undefined) {
                    this.sync_request_type = data.sync_request_type;
                }
                if ("sync_request_id" in data && data.sync_request_id != undefined) {
                    this.sync_request_id = data.sync_request_id;
                }
                if ("sync_request_time" in data && data.sync_request_time != undefined) {
                    this.sync_request_time = data.sync_request_time;
                }
                if ("sync_request_params" in data && data.sync_request_params != undefined) {
                    this.sync_request_params = data.sync_request_params;
                }
                if ("job_type_name" in data && data.job_type_name != undefined) {
                    this.job_type_name = data.job_type_name;
                }
                if ("job_message" in data && data.job_message != undefined) {
                    this.job_message = data.job_message;
                }
            }
        }
        get sync_status() {
            return pb_1.Message.getFieldWithDefault(this, 1, GMGROUP_SYNC_STATES.GMGSS_INSYNC) as GMGROUP_SYNC_STATES;
        }
        set sync_status(value: GMGROUP_SYNC_STATES) {
            pb_1.Message.setField(this, 1, value);
        }
        get sync_request_type() {
            return pb_1.Message.getFieldWithDefault(this, 2, GMGROUP_SYNC_REQUEST_TYPES.GMGSRT_NONE) as GMGROUP_SYNC_REQUEST_TYPES;
        }
        set sync_request_type(value: GMGROUP_SYNC_REQUEST_TYPES) {
            pb_1.Message.setField(this, 2, value);
        }
        get sync_request_id() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set sync_request_id(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get sync_request_time() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set sync_request_time(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get sync_request_params() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set sync_request_params(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get job_type_name() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set job_type_name(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get job_message() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set job_message(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        static fromObject(data: {
            sync_status?: GMGROUP_SYNC_STATES;
            sync_request_type?: GMGROUP_SYNC_REQUEST_TYPES;
            sync_request_id?: string;
            sync_request_time?: number;
            sync_request_params?: string;
            job_type_name?: string;
            job_message?: string;
        }): GMGroupSyncInfo {
            const message = new GMGroupSyncInfo({});
            if (data.sync_status != null) {
                message.sync_status = data.sync_status;
            }
            if (data.sync_request_type != null) {
                message.sync_request_type = data.sync_request_type;
            }
            if (data.sync_request_id != null) {
                message.sync_request_id = data.sync_request_id;
            }
            if (data.sync_request_time != null) {
                message.sync_request_time = data.sync_request_time;
            }
            if (data.sync_request_params != null) {
                message.sync_request_params = data.sync_request_params;
            }
            if (data.job_type_name != null) {
                message.job_type_name = data.job_type_name;
            }
            if (data.job_message != null) {
                message.job_message = data.job_message;
            }
            return message;
        }
        toObject() {
            const data: {
                sync_status?: GMGROUP_SYNC_STATES;
                sync_request_type?: GMGROUP_SYNC_REQUEST_TYPES;
                sync_request_id?: string;
                sync_request_time?: number;
                sync_request_params?: string;
                job_type_name?: string;
                job_message?: string;
            } = {};
            if (this.sync_status != null) {
                data.sync_status = this.sync_status;
            }
            if (this.sync_request_type != null) {
                data.sync_request_type = this.sync_request_type;
            }
            if (this.sync_request_id != null) {
                data.sync_request_id = this.sync_request_id;
            }
            if (this.sync_request_time != null) {
                data.sync_request_time = this.sync_request_time;
            }
            if (this.sync_request_params != null) {
                data.sync_request_params = this.sync_request_params;
            }
            if (this.job_type_name != null) {
                data.job_type_name = this.job_type_name;
            }
            if (this.job_message != null) {
                data.job_message = this.job_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.sync_status != GMGROUP_SYNC_STATES.GMGSS_INSYNC)
                writer.writeEnum(1, this.sync_status);
            if (this.sync_request_type != GMGROUP_SYNC_REQUEST_TYPES.GMGSRT_NONE)
                writer.writeEnum(2, this.sync_request_type);
            if (this.sync_request_id.length)
                writer.writeString(3, this.sync_request_id);
            if (this.sync_request_time != 0)
                writer.writeUint64(4, this.sync_request_time);
            if (this.sync_request_params.length)
                writer.writeString(5, this.sync_request_params);
            if (this.job_type_name.length)
                writer.writeString(6, this.job_type_name);
            if (this.job_message.length)
                writer.writeString(7, this.job_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupSyncInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupSyncInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.sync_status = reader.readEnum();
                        break;
                    case 2:
                        message.sync_request_type = reader.readEnum();
                        break;
                    case 3:
                        message.sync_request_id = reader.readString();
                        break;
                    case 4:
                        message.sync_request_time = reader.readUint64();
                        break;
                    case 5:
                        message.sync_request_params = reader.readString();
                        break;
                    case 6:
                        message.job_type_name = reader.readString();
                        break;
                    case 7:
                        message.job_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupSyncInfo {
            return GMGroupSyncInfo.deserialize(bytes);
        }
    }
    export class GMGroupVoiceInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            discover_group?: boolean;
            group_voice_name?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("discover_group" in data && data.discover_group != undefined) {
                    this.discover_group = data.discover_group;
                }
                if ("group_voice_name" in data && data.group_voice_name != undefined) {
                    this.group_voice_name = data.group_voice_name;
                }
            }
        }
        get discover_group() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set discover_group(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_voice_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_voice_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            discover_group?: boolean;
            group_voice_name?: string;
        }): GMGroupVoiceInfo {
            const message = new GMGroupVoiceInfo({});
            if (data.discover_group != null) {
                message.discover_group = data.discover_group;
            }
            if (data.group_voice_name != null) {
                message.group_voice_name = data.group_voice_name;
            }
            return message;
        }
        toObject() {
            const data: {
                discover_group?: boolean;
                group_voice_name?: string;
            } = {};
            if (this.discover_group != null) {
                data.discover_group = this.discover_group;
            }
            if (this.group_voice_name != null) {
                data.group_voice_name = this.group_voice_name;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.discover_group != false)
                writer.writeBool(1, this.discover_group);
            if (this.group_voice_name.length)
                writer.writeString(2, this.group_voice_name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupVoiceInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupVoiceInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.discover_group = reader.readBool();
                        break;
                    case 2:
                        message.group_voice_name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupVoiceInfo {
            return GMGroupVoiceInfo.deserialize(bytes);
        }
    }
    export class GMGroupStatusInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            is_configured?: boolean;
            is_hidden?: boolean;
            is_high_power?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("is_configured" in data && data.is_configured != undefined) {
                    this.is_configured = data.is_configured;
                }
                if ("is_hidden" in data && data.is_hidden != undefined) {
                    this.is_hidden = data.is_hidden;
                }
                if ("is_high_power" in data && data.is_high_power != undefined) {
                    this.is_high_power = data.is_high_power;
                }
            }
        }
        get is_configured() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set is_configured(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get is_hidden() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set is_hidden(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get is_high_power() {
            return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
        }
        set is_high_power(value: boolean) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            is_configured?: boolean;
            is_hidden?: boolean;
            is_high_power?: boolean;
        }): GMGroupStatusInfo {
            const message = new GMGroupStatusInfo({});
            if (data.is_configured != null) {
                message.is_configured = data.is_configured;
            }
            if (data.is_hidden != null) {
                message.is_hidden = data.is_hidden;
            }
            if (data.is_high_power != null) {
                message.is_high_power = data.is_high_power;
            }
            return message;
        }
        toObject() {
            const data: {
                is_configured?: boolean;
                is_hidden?: boolean;
                is_high_power?: boolean;
            } = {};
            if (this.is_configured != null) {
                data.is_configured = this.is_configured;
            }
            if (this.is_hidden != null) {
                data.is_hidden = this.is_hidden;
            }
            if (this.is_high_power != null) {
                data.is_high_power = this.is_high_power;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.is_configured != false)
                writer.writeBool(1, this.is_configured);
            if (this.is_hidden != false)
                writer.writeBool(2, this.is_hidden);
            if (this.is_high_power != false)
                writer.writeBool(3, this.is_high_power);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupStatusInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupStatusInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.is_configured = reader.readBool();
                        break;
                    case 2:
                        message.is_hidden = reader.readBool();
                        break;
                    case 3:
                        message.is_high_power = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupStatusInfo {
            return GMGroupStatusInfo.deserialize(bytes);
        }
    }
    export class GMGroupProtocolControlInfo extends pb_1.Message {
        #one_of_decls: number[][] = [[1, 2]];
        constructor(data?: any[] | ({} & (({
            keus_zigbee_group_control_info?: dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo;
            ip_group_control_info?: never;
        } | {
            keus_zigbee_group_control_info?: never;
            ip_group_control_info?: dependency_9.com.keus.gateway.IpGMGroupControlInfo;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("keus_zigbee_group_control_info" in data && data.keus_zigbee_group_control_info != undefined) {
                    this.keus_zigbee_group_control_info = data.keus_zigbee_group_control_info;
                }
                if ("ip_group_control_info" in data && data.ip_group_control_info != undefined) {
                    this.ip_group_control_info = data.ip_group_control_info;
                }
            }
        }
        get keus_zigbee_group_control_info() {
            return pb_1.Message.getWrapperField(this, dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo, 1) as dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo;
        }
        set keus_zigbee_group_control_info(value: dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo) {
            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);
        }
        get has_keus_zigbee_group_control_info() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get ip_group_control_info() {
            return pb_1.Message.getWrapperField(this, dependency_9.com.keus.gateway.IpGMGroupControlInfo, 2) as dependency_9.com.keus.gateway.IpGMGroupControlInfo;
        }
        set ip_group_control_info(value: dependency_9.com.keus.gateway.IpGMGroupControlInfo) {
            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
        }
        get has_ip_group_control_info() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get group_control_info() {
            const cases: {
                [index: number]: "none" | "keus_zigbee_group_control_info" | "ip_group_control_info";
            } = {
                0: "none",
                1: "keus_zigbee_group_control_info",
                2: "ip_group_control_info"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
        }
        static fromObject(data: {
            keus_zigbee_group_control_info?: ReturnType<typeof dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo.prototype.toObject>;
            ip_group_control_info?: ReturnType<typeof dependency_9.com.keus.gateway.IpGMGroupControlInfo.prototype.toObject>;
        }): GMGroupProtocolControlInfo {
            const message = new GMGroupProtocolControlInfo({});
            if (data.keus_zigbee_group_control_info != null) {
                message.keus_zigbee_group_control_info = dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo.fromObject(data.keus_zigbee_group_control_info);
            }
            if (data.ip_group_control_info != null) {
                message.ip_group_control_info = dependency_9.com.keus.gateway.IpGMGroupControlInfo.fromObject(data.ip_group_control_info);
            }
            return message;
        }
        toObject() {
            const data: {
                keus_zigbee_group_control_info?: ReturnType<typeof dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo.prototype.toObject>;
                ip_group_control_info?: ReturnType<typeof dependency_9.com.keus.gateway.IpGMGroupControlInfo.prototype.toObject>;
            } = {};
            if (this.keus_zigbee_group_control_info != null) {
                data.keus_zigbee_group_control_info = this.keus_zigbee_group_control_info.toObject();
            }
            if (this.ip_group_control_info != null) {
                data.ip_group_control_info = this.ip_group_control_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_keus_zigbee_group_control_info)
                writer.writeMessage(1, this.keus_zigbee_group_control_info, () => this.keus_zigbee_group_control_info.serialize(writer));
            if (this.has_ip_group_control_info)
                writer.writeMessage(2, this.ip_group_control_info, () => this.ip_group_control_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupProtocolControlInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupProtocolControlInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.keus_zigbee_group_control_info, () => message.keus_zigbee_group_control_info = dependency_8.com.keus.gateway.KeusZigbeeGMGroupControlInfo.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.ip_group_control_info, () => message.ip_group_control_info = dependency_9.com.keus.gateway.IpGMGroupControlInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupProtocolControlInfo {
            return GMGroupProtocolControlInfo.deserialize(bytes);
        }
    }
    export class GMGroupControlInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_control_type?: string;
            group_protocol_control_info?: GMGroupProtocolControlInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_control_type" in data && data.group_control_type != undefined) {
                    this.group_control_type = data.group_control_type;
                }
                if ("group_protocol_control_info" in data && data.group_protocol_control_info != undefined) {
                    this.group_protocol_control_info = data.group_protocol_control_info;
                }
            }
        }
        get group_control_type() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_control_type(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_protocol_control_info() {
            return pb_1.Message.getWrapperField(this, GMGroupProtocolControlInfo, 2) as GMGroupProtocolControlInfo;
        }
        set group_protocol_control_info(value: GMGroupProtocolControlInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_protocol_control_info() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_control_type?: string;
            group_protocol_control_info?: ReturnType<typeof GMGroupProtocolControlInfo.prototype.toObject>;
        }): GMGroupControlInfo {
            const message = new GMGroupControlInfo({});
            if (data.group_control_type != null) {
                message.group_control_type = data.group_control_type;
            }
            if (data.group_protocol_control_info != null) {
                message.group_protocol_control_info = GMGroupProtocolControlInfo.fromObject(data.group_protocol_control_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_control_type?: string;
                group_protocol_control_info?: ReturnType<typeof GMGroupProtocolControlInfo.prototype.toObject>;
            } = {};
            if (this.group_control_type != null) {
                data.group_control_type = this.group_control_type;
            }
            if (this.group_protocol_control_info != null) {
                data.group_protocol_control_info = this.group_protocol_control_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_control_type.length)
                writer.writeString(1, this.group_control_type);
            if (this.has_group_protocol_control_info)
                writer.writeMessage(2, this.group_protocol_control_info, () => this.group_protocol_control_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupControlInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupControlInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_control_type = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_protocol_control_info, () => message.group_protocol_control_info = GMGroupProtocolControlInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupControlInfo {
            return GMGroupControlInfo.deserialize(bytes);
        }
    }
    export class GMGroupApplianceSyncInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            appliance_insync?: boolean;
            request_time?: number;
            request_type?: GMGROUP_SYNC_REQUEST_TYPES;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("appliance_insync" in data && data.appliance_insync != undefined) {
                    this.appliance_insync = data.appliance_insync;
                }
                if ("request_time" in data && data.request_time != undefined) {
                    this.request_time = data.request_time;
                }
                if ("request_type" in data && data.request_type != undefined) {
                    this.request_type = data.request_type;
                }
            }
        }
        get appliance_insync() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set appliance_insync(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get request_time() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set request_time(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get request_type() {
            return pb_1.Message.getFieldWithDefault(this, 3, GMGROUP_SYNC_REQUEST_TYPES.GMGSRT_NONE) as GMGROUP_SYNC_REQUEST_TYPES;
        }
        set request_type(value: GMGROUP_SYNC_REQUEST_TYPES) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            appliance_insync?: boolean;
            request_time?: number;
            request_type?: GMGROUP_SYNC_REQUEST_TYPES;
        }): GMGroupApplianceSyncInfo {
            const message = new GMGroupApplianceSyncInfo({});
            if (data.appliance_insync != null) {
                message.appliance_insync = data.appliance_insync;
            }
            if (data.request_time != null) {
                message.request_time = data.request_time;
            }
            if (data.request_type != null) {
                message.request_type = data.request_type;
            }
            return message;
        }
        toObject() {
            const data: {
                appliance_insync?: boolean;
                request_time?: number;
                request_type?: GMGROUP_SYNC_REQUEST_TYPES;
            } = {};
            if (this.appliance_insync != null) {
                data.appliance_insync = this.appliance_insync;
            }
            if (this.request_time != null) {
                data.request_time = this.request_time;
            }
            if (this.request_type != null) {
                data.request_type = this.request_type;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.appliance_insync != false)
                writer.writeBool(1, this.appliance_insync);
            if (this.request_time != 0)
                writer.writeUint64(2, this.request_time);
            if (this.request_type != GMGROUP_SYNC_REQUEST_TYPES.GMGSRT_NONE)
                writer.writeEnum(3, this.request_type);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupApplianceSyncInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupApplianceSyncInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.appliance_insync = reader.readBool();
                        break;
                    case 2:
                        message.request_time = reader.readUint64();
                        break;
                    case 3:
                        message.request_type = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupApplianceSyncInfo {
            return GMGroupApplianceSyncInfo.deserialize(bytes);
        }
    }
    export class GMGroupApplianceInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            appliance_identifier?: dependency_7.com.keus.gateway.GMApplianceIdentifier;
            group_appliance_sync_info?: GMGroupApplianceSyncInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("appliance_identifier" in data && data.appliance_identifier != undefined) {
                    this.appliance_identifier = data.appliance_identifier;
                }
                if ("group_appliance_sync_info" in data && data.group_appliance_sync_info != undefined) {
                    this.group_appliance_sync_info = data.group_appliance_sync_info;
                }
            }
        }
        get appliance_identifier() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceIdentifier, 1) as dependency_7.com.keus.gateway.GMApplianceIdentifier;
        }
        set appliance_identifier(value: dependency_7.com.keus.gateway.GMApplianceIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_appliance_identifier() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get group_appliance_sync_info() {
            return pb_1.Message.getWrapperField(this, GMGroupApplianceSyncInfo, 2) as GMGroupApplianceSyncInfo;
        }
        set group_appliance_sync_info(value: GMGroupApplianceSyncInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_appliance_sync_info() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            appliance_identifier?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceIdentifier.prototype.toObject>;
            group_appliance_sync_info?: ReturnType<typeof GMGroupApplianceSyncInfo.prototype.toObject>;
        }): GMGroupApplianceInfo {
            const message = new GMGroupApplianceInfo({});
            if (data.appliance_identifier != null) {
                message.appliance_identifier = dependency_7.com.keus.gateway.GMApplianceIdentifier.fromObject(data.appliance_identifier);
            }
            if (data.group_appliance_sync_info != null) {
                message.group_appliance_sync_info = GMGroupApplianceSyncInfo.fromObject(data.group_appliance_sync_info);
            }
            return message;
        }
        toObject() {
            const data: {
                appliance_identifier?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceIdentifier.prototype.toObject>;
                group_appliance_sync_info?: ReturnType<typeof GMGroupApplianceSyncInfo.prototype.toObject>;
            } = {};
            if (this.appliance_identifier != null) {
                data.appliance_identifier = this.appliance_identifier.toObject();
            }
            if (this.group_appliance_sync_info != null) {
                data.group_appliance_sync_info = this.group_appliance_sync_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_appliance_identifier)
                writer.writeMessage(1, this.appliance_identifier, () => this.appliance_identifier.serialize(writer));
            if (this.has_group_appliance_sync_info)
                writer.writeMessage(2, this.group_appliance_sync_info, () => this.group_appliance_sync_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupApplianceInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupApplianceInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.appliance_identifier, () => message.appliance_identifier = dependency_7.com.keus.gateway.GMApplianceIdentifier.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.group_appliance_sync_info, () => message.group_appliance_sync_info = GMGroupApplianceSyncInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupApplianceInfo {
            return GMGroupApplianceInfo.deserialize(bytes);
        }
    }
    export class GMGroupIdentifier extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            group_id?: string;
        }): GMGroupIdentifier {
            const message = new GMGroupIdentifier({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupIdentifier {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupIdentifier();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupIdentifier {
            return GMGroupIdentifier.deserialize(bytes);
        }
    }
    export class GMGroupSceneAction extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_type?: string;
            group_identifier?: GMGroupIdentifier;
            group_state?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_type" in data && data.group_type != undefined) {
                    this.group_type = data.group_type;
                }
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("group_state" in data && data.group_state != undefined) {
                    this.group_state = data.group_state;
                }
            }
        }
        get group_type() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_type(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 2) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get group_state() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 3) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_state() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_type?: string;
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            group_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
        }): GMGroupSceneAction {
            const message = new GMGroupSceneAction({});
            if (data.group_type != null) {
                message.group_type = data.group_type;
            }
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.group_state != null) {
                message.group_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state);
            }
            return message;
        }
        toObject() {
            const data: {
                group_type?: string;
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                group_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            } = {};
            if (this.group_type != null) {
                data.group_type = this.group_type;
            }
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.group_state != null) {
                data.group_state = this.group_state.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_type.length)
                writer.writeString(1, this.group_type);
            if (this.has_group_identifier)
                writer.writeMessage(2, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.has_group_state)
                writer.writeMessage(3, this.group_state, () => this.group_state.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupSceneAction {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupSceneAction();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_type = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.group_state, () => message.group_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupSceneAction {
            return GMGroupSceneAction.deserialize(bytes);
        }
    }
    export class GMGroupScheduleAction extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_type?: string;
            group_identifier?: GMGroupIdentifier;
            group_state?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_type" in data && data.group_type != undefined) {
                    this.group_type = data.group_type;
                }
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("group_state" in data && data.group_state != undefined) {
                    this.group_state = data.group_state;
                }
            }
        }
        get group_type() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_type(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 2) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get group_state() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 3) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_state() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_type?: string;
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            group_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
        }): GMGroupScheduleAction {
            const message = new GMGroupScheduleAction({});
            if (data.group_type != null) {
                message.group_type = data.group_type;
            }
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.group_state != null) {
                message.group_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state);
            }
            return message;
        }
        toObject() {
            const data: {
                group_type?: string;
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                group_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            } = {};
            if (this.group_type != null) {
                data.group_type = this.group_type;
            }
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.group_state != null) {
                data.group_state = this.group_state.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_type.length)
                writer.writeString(1, this.group_type);
            if (this.has_group_identifier)
                writer.writeMessage(2, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.has_group_state)
                writer.writeMessage(3, this.group_state, () => this.group_state.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupScheduleAction {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupScheduleAction();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_type = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.group_state, () => message.group_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupScheduleAction {
            return GMGroupScheduleAction.deserialize(bytes);
        }
    }
    export class SmartConsoleGMGroupButtonProperties extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            group_id?: string;
        }): SmartConsoleGMGroupButtonProperties {
            const message = new SmartConsoleGMGroupButtonProperties({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SmartConsoleGMGroupButtonProperties {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SmartConsoleGMGroupButtonProperties();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SmartConsoleGMGroupButtonProperties {
            return SmartConsoleGMGroupButtonProperties.deserialize(bytes);
        }
    }
    export class GMGroupSavedStateAction extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            SavedState_id?: string;
            SavedState_name?: string;
            SavedState_state?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
            created_by?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("SavedState_id" in data && data.SavedState_id != undefined) {
                    this.SavedState_id = data.SavedState_id;
                }
                if ("SavedState_name" in data && data.SavedState_name != undefined) {
                    this.SavedState_name = data.SavedState_name;
                }
                if ("SavedState_state" in data && data.SavedState_state != undefined) {
                    this.SavedState_state = data.SavedState_state;
                }
                if ("created_by" in data && data.created_by != undefined) {
                    this.created_by = data.created_by;
                }
            }
        }
        get SavedState_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set SavedState_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get SavedState_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set SavedState_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get SavedState_state() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 3) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set SavedState_state(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_SavedState_state() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get created_by() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set created_by(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            SavedState_id?: string;
            SavedState_name?: string;
            SavedState_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            created_by?: string;
        }): GMGroupSavedStateAction {
            const message = new GMGroupSavedStateAction({});
            if (data.SavedState_id != null) {
                message.SavedState_id = data.SavedState_id;
            }
            if (data.SavedState_name != null) {
                message.SavedState_name = data.SavedState_name;
            }
            if (data.SavedState_state != null) {
                message.SavedState_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.SavedState_state);
            }
            if (data.created_by != null) {
                message.created_by = data.created_by;
            }
            return message;
        }
        toObject() {
            const data: {
                SavedState_id?: string;
                SavedState_name?: string;
                SavedState_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
                created_by?: string;
            } = {};
            if (this.SavedState_id != null) {
                data.SavedState_id = this.SavedState_id;
            }
            if (this.SavedState_name != null) {
                data.SavedState_name = this.SavedState_name;
            }
            if (this.SavedState_state != null) {
                data.SavedState_state = this.SavedState_state.toObject();
            }
            if (this.created_by != null) {
                data.created_by = this.created_by;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.SavedState_id.length)
                writer.writeString(1, this.SavedState_id);
            if (this.SavedState_name.length)
                writer.writeString(2, this.SavedState_name);
            if (this.has_SavedState_state)
                writer.writeMessage(3, this.SavedState_state, () => this.SavedState_state.serialize(writer));
            if (this.created_by.length)
                writer.writeString(4, this.created_by);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupSavedStateAction {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupSavedStateAction();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.SavedState_id = reader.readString();
                        break;
                    case 2:
                        message.SavedState_name = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.SavedState_state, () => message.SavedState_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    case 4:
                        message.created_by = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupSavedStateAction {
            return GMGroupSavedStateAction.deserialize(bytes);
        }
    }
    export class GMGroupAdditionalInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_saved_state?: GMGroupSavedStateAction[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_saved_state" in data && data.group_saved_state != undefined) {
                    this.group_saved_state = data.group_saved_state;
                }
            }
        }
        get group_saved_state() {
            return pb_1.Message.getRepeatedWrapperField(this, GMGroupSavedStateAction, 1) as GMGroupSavedStateAction[];
        }
        set group_saved_state(value: GMGroupSavedStateAction[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data: {
            group_saved_state?: ReturnType<typeof GMGroupSavedStateAction.prototype.toObject>[];
        }): GMGroupAdditionalInfo {
            const message = new GMGroupAdditionalInfo({});
            if (data.group_saved_state != null) {
                message.group_saved_state = data.group_saved_state.map(item => GMGroupSavedStateAction.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                group_saved_state?: ReturnType<typeof GMGroupSavedStateAction.prototype.toObject>[];
            } = {};
            if (this.group_saved_state != null) {
                data.group_saved_state = this.group_saved_state.map((item: GMGroupSavedStateAction) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_saved_state.length)
                writer.writeRepeatedMessage(1, this.group_saved_state, (item: GMGroupSavedStateAction) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupAdditionalInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupAdditionalInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_saved_state, () => pb_1.Message.addToRepeatedWrapperField(message, 1, GMGroupSavedStateAction.deserialize(reader), GMGroupSavedStateAction));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupAdditionalInfo {
            return GMGroupAdditionalInfo.deserialize(bytes);
        }
    }
    export class GMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_type?: string;
            group_category?: string;
            group_name?: string;
            group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
            group_control_info?: GMGroupControlInfo;
            group_home_info?: GMGroupHomeInfo;
            group_sync_info?: GMGroupSyncInfo;
            group_status_info?: GMGroupStatusInfo;
            group_appliance?: GMGroupApplianceInfo[];
            group_activity_info?: dependency_6.com.keus.gateway.ActivitySourceInfo;
            group_voice_info?: GMGroupVoiceInfo;
            group_state_info?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
            group_properties_info?: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
            group_additional_info?: GMGroupAdditionalInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [10], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_type" in data && data.group_type != undefined) {
                    this.group_type = data.group_type;
                }
                if ("group_category" in data && data.group_category != undefined) {
                    this.group_category = data.group_category;
                }
                if ("group_name" in data && data.group_name != undefined) {
                    this.group_name = data.group_name;
                }
                if ("group_icon" in data && data.group_icon != undefined) {
                    this.group_icon = data.group_icon;
                }
                if ("group_control_info" in data && data.group_control_info != undefined) {
                    this.group_control_info = data.group_control_info;
                }
                if ("group_home_info" in data && data.group_home_info != undefined) {
                    this.group_home_info = data.group_home_info;
                }
                if ("group_sync_info" in data && data.group_sync_info != undefined) {
                    this.group_sync_info = data.group_sync_info;
                }
                if ("group_status_info" in data && data.group_status_info != undefined) {
                    this.group_status_info = data.group_status_info;
                }
                if ("group_appliance" in data && data.group_appliance != undefined) {
                    this.group_appliance = data.group_appliance;
                }
                if ("group_activity_info" in data && data.group_activity_info != undefined) {
                    this.group_activity_info = data.group_activity_info;
                }
                if ("group_voice_info" in data && data.group_voice_info != undefined) {
                    this.group_voice_info = data.group_voice_info;
                }
                if ("group_state_info" in data && data.group_state_info != undefined) {
                    this.group_state_info = data.group_state_info;
                }
                if ("group_properties_info" in data && data.group_properties_info != undefined) {
                    this.group_properties_info = data.group_properties_info;
                }
                if ("group_additional_info" in data && data.group_additional_info != undefined) {
                    this.group_additional_info = data.group_additional_info;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_type() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_type(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get group_category() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set group_category(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get group_name() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set group_name(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get group_icon() {
            return pb_1.Message.getFieldWithDefault(this, 5, dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT) as dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }
        set group_icon(value: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS) {
            pb_1.Message.setField(this, 5, value);
        }
        get group_control_info() {
            return pb_1.Message.getWrapperField(this, GMGroupControlInfo, 6) as GMGroupControlInfo;
        }
        set group_control_info(value: GMGroupControlInfo) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_group_control_info() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get group_home_info() {
            return pb_1.Message.getWrapperField(this, GMGroupHomeInfo, 7) as GMGroupHomeInfo;
        }
        set group_home_info(value: GMGroupHomeInfo) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_group_home_info() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get group_sync_info() {
            return pb_1.Message.getWrapperField(this, GMGroupSyncInfo, 8) as GMGroupSyncInfo;
        }
        set group_sync_info(value: GMGroupSyncInfo) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get has_group_sync_info() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get group_status_info() {
            return pb_1.Message.getWrapperField(this, GMGroupStatusInfo, 9) as GMGroupStatusInfo;
        }
        set group_status_info(value: GMGroupStatusInfo) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_group_status_info() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get group_appliance() {
            return pb_1.Message.getRepeatedWrapperField(this, GMGroupApplianceInfo, 10) as GMGroupApplianceInfo[];
        }
        set group_appliance(value: GMGroupApplianceInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 10, value);
        }
        get group_activity_info() {
            return pb_1.Message.getWrapperField(this, dependency_6.com.keus.gateway.ActivitySourceInfo, 11) as dependency_6.com.keus.gateway.ActivitySourceInfo;
        }
        set group_activity_info(value: dependency_6.com.keus.gateway.ActivitySourceInfo) {
            pb_1.Message.setWrapperField(this, 11, value);
        }
        get has_group_activity_info() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get group_voice_info() {
            return pb_1.Message.getWrapperField(this, GMGroupVoiceInfo, 12) as GMGroupVoiceInfo;
        }
        set group_voice_info(value: GMGroupVoiceInfo) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get has_group_voice_info() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get group_state_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 13) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state_info(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get has_group_state_info() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get group_properties_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMAppliancePropertiesInfo, 14) as dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }
        set group_properties_info(value: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_group_properties_info() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get group_additional_info() {
            return pb_1.Message.getWrapperField(this, GMGroupAdditionalInfo, 15) as GMGroupAdditionalInfo;
        }
        set group_additional_info(value: GMGroupAdditionalInfo) {
            pb_1.Message.setWrapperField(this, 15, value);
        }
        get has_group_additional_info() {
            return pb_1.Message.getField(this, 15) != null;
        }
        static fromObject(data: {
            group_id?: string;
            group_type?: string;
            group_category?: string;
            group_name?: string;
            group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
            group_control_info?: ReturnType<typeof GMGroupControlInfo.prototype.toObject>;
            group_home_info?: ReturnType<typeof GMGroupHomeInfo.prototype.toObject>;
            group_sync_info?: ReturnType<typeof GMGroupSyncInfo.prototype.toObject>;
            group_status_info?: ReturnType<typeof GMGroupStatusInfo.prototype.toObject>;
            group_appliance?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
            group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
            group_voice_info?: ReturnType<typeof GMGroupVoiceInfo.prototype.toObject>;
            group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            group_properties_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
            group_additional_info?: ReturnType<typeof GMGroupAdditionalInfo.prototype.toObject>;
        }): GMGroup {
            const message = new GMGroup({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_type != null) {
                message.group_type = data.group_type;
            }
            if (data.group_category != null) {
                message.group_category = data.group_category;
            }
            if (data.group_name != null) {
                message.group_name = data.group_name;
            }
            if (data.group_icon != null) {
                message.group_icon = data.group_icon;
            }
            if (data.group_control_info != null) {
                message.group_control_info = GMGroupControlInfo.fromObject(data.group_control_info);
            }
            if (data.group_home_info != null) {
                message.group_home_info = GMGroupHomeInfo.fromObject(data.group_home_info);
            }
            if (data.group_sync_info != null) {
                message.group_sync_info = GMGroupSyncInfo.fromObject(data.group_sync_info);
            }
            if (data.group_status_info != null) {
                message.group_status_info = GMGroupStatusInfo.fromObject(data.group_status_info);
            }
            if (data.group_appliance != null) {
                message.group_appliance = data.group_appliance.map(item => GMGroupApplianceInfo.fromObject(item));
            }
            if (data.group_activity_info != null) {
                message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.fromObject(data.group_activity_info);
            }
            if (data.group_voice_info != null) {
                message.group_voice_info = GMGroupVoiceInfo.fromObject(data.group_voice_info);
            }
            if (data.group_state_info != null) {
                message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state_info);
            }
            if (data.group_properties_info != null) {
                message.group_properties_info = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.fromObject(data.group_properties_info);
            }
            if (data.group_additional_info != null) {
                message.group_additional_info = GMGroupAdditionalInfo.fromObject(data.group_additional_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_type?: string;
                group_category?: string;
                group_name?: string;
                group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
                group_control_info?: ReturnType<typeof GMGroupControlInfo.prototype.toObject>;
                group_home_info?: ReturnType<typeof GMGroupHomeInfo.prototype.toObject>;
                group_sync_info?: ReturnType<typeof GMGroupSyncInfo.prototype.toObject>;
                group_status_info?: ReturnType<typeof GMGroupStatusInfo.prototype.toObject>;
                group_appliance?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
                group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
                group_voice_info?: ReturnType<typeof GMGroupVoiceInfo.prototype.toObject>;
                group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
                group_properties_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
                group_additional_info?: ReturnType<typeof GMGroupAdditionalInfo.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_type != null) {
                data.group_type = this.group_type;
            }
            if (this.group_category != null) {
                data.group_category = this.group_category;
            }
            if (this.group_name != null) {
                data.group_name = this.group_name;
            }
            if (this.group_icon != null) {
                data.group_icon = this.group_icon;
            }
            if (this.group_control_info != null) {
                data.group_control_info = this.group_control_info.toObject();
            }
            if (this.group_home_info != null) {
                data.group_home_info = this.group_home_info.toObject();
            }
            if (this.group_sync_info != null) {
                data.group_sync_info = this.group_sync_info.toObject();
            }
            if (this.group_status_info != null) {
                data.group_status_info = this.group_status_info.toObject();
            }
            if (this.group_appliance != null) {
                data.group_appliance = this.group_appliance.map((item: GMGroupApplianceInfo) => item.toObject());
            }
            if (this.group_activity_info != null) {
                data.group_activity_info = this.group_activity_info.toObject();
            }
            if (this.group_voice_info != null) {
                data.group_voice_info = this.group_voice_info.toObject();
            }
            if (this.group_state_info != null) {
                data.group_state_info = this.group_state_info.toObject();
            }
            if (this.group_properties_info != null) {
                data.group_properties_info = this.group_properties_info.toObject();
            }
            if (this.group_additional_info != null) {
                data.group_additional_info = this.group_additional_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.group_type.length)
                writer.writeString(2, this.group_type);
            if (this.group_category.length)
                writer.writeString(3, this.group_category);
            if (this.group_name.length)
                writer.writeString(4, this.group_name);
            if (this.group_icon != dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT)
                writer.writeEnum(5, this.group_icon);
            if (this.has_group_control_info)
                writer.writeMessage(6, this.group_control_info, () => this.group_control_info.serialize(writer));
            if (this.has_group_home_info)
                writer.writeMessage(7, this.group_home_info, () => this.group_home_info.serialize(writer));
            if (this.has_group_sync_info)
                writer.writeMessage(8, this.group_sync_info, () => this.group_sync_info.serialize(writer));
            if (this.has_group_status_info)
                writer.writeMessage(9, this.group_status_info, () => this.group_status_info.serialize(writer));
            if (this.group_appliance.length)
                writer.writeRepeatedMessage(10, this.group_appliance, (item: GMGroupApplianceInfo) => item.serialize(writer));
            if (this.has_group_activity_info)
                writer.writeMessage(11, this.group_activity_info, () => this.group_activity_info.serialize(writer));
            if (this.has_group_voice_info)
                writer.writeMessage(12, this.group_voice_info, () => this.group_voice_info.serialize(writer));
            if (this.has_group_state_info)
                writer.writeMessage(13, this.group_state_info, () => this.group_state_info.serialize(writer));
            if (this.has_group_properties_info)
                writer.writeMessage(14, this.group_properties_info, () => this.group_properties_info.serialize(writer));
            if (this.has_group_additional_info)
                writer.writeMessage(15, this.group_additional_info, () => this.group_additional_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.group_type = reader.readString();
                        break;
                    case 3:
                        message.group_category = reader.readString();
                        break;
                    case 4:
                        message.group_name = reader.readString();
                        break;
                    case 5:
                        message.group_icon = reader.readEnum();
                        break;
                    case 6:
                        reader.readMessage(message.group_control_info, () => message.group_control_info = GMGroupControlInfo.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.group_home_info, () => message.group_home_info = GMGroupHomeInfo.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.group_sync_info, () => message.group_sync_info = GMGroupSyncInfo.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.group_status_info, () => message.group_status_info = GMGroupStatusInfo.deserialize(reader));
                        break;
                    case 10:
                        reader.readMessage(message.group_appliance, () => pb_1.Message.addToRepeatedWrapperField(message, 10, GMGroupApplianceInfo.deserialize(reader), GMGroupApplianceInfo));
                        break;
                    case 11:
                        reader.readMessage(message.group_activity_info, () => message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.deserialize(reader));
                        break;
                    case 12:
                        reader.readMessage(message.group_voice_info, () => message.group_voice_info = GMGroupVoiceInfo.deserialize(reader));
                        break;
                    case 13:
                        reader.readMessage(message.group_state_info, () => message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.group_properties_info, () => message.group_properties_info = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.deserialize(reader));
                        break;
                    case 15:
                        reader.readMessage(message.group_additional_info, () => message.group_additional_info = GMGroupAdditionalInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroup {
            return GMGroup.deserialize(bytes);
        }
    }
    export class CreateGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_name?: string;
            group_type?: string;
            group_room?: string;
            group_section?: string;
            group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
            group_control_type?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_name" in data && data.group_name != undefined) {
                    this.group_name = data.group_name;
                }
                if ("group_type" in data && data.group_type != undefined) {
                    this.group_type = data.group_type;
                }
                if ("group_room" in data && data.group_room != undefined) {
                    this.group_room = data.group_room;
                }
                if ("group_section" in data && data.group_section != undefined) {
                    this.group_section = data.group_section;
                }
                if ("group_icon" in data && data.group_icon != undefined) {
                    this.group_icon = data.group_icon;
                }
                if ("group_control_type" in data && data.group_control_type != undefined) {
                    this.group_control_type = data.group_control_type;
                }
            }
        }
        get group_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_type() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_type(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get group_room() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set group_room(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get group_section() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set group_section(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get group_icon() {
            return pb_1.Message.getFieldWithDefault(this, 5, dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT) as dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }
        set group_icon(value: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS) {
            pb_1.Message.setField(this, 5, value);
        }
        get group_control_type() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set group_control_type(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            group_name?: string;
            group_type?: string;
            group_room?: string;
            group_section?: string;
            group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
            group_control_type?: string;
        }): CreateGMGroup {
            const message = new CreateGMGroup({});
            if (data.group_name != null) {
                message.group_name = data.group_name;
            }
            if (data.group_type != null) {
                message.group_type = data.group_type;
            }
            if (data.group_room != null) {
                message.group_room = data.group_room;
            }
            if (data.group_section != null) {
                message.group_section = data.group_section;
            }
            if (data.group_icon != null) {
                message.group_icon = data.group_icon;
            }
            if (data.group_control_type != null) {
                message.group_control_type = data.group_control_type;
            }
            return message;
        }
        toObject() {
            const data: {
                group_name?: string;
                group_type?: string;
                group_room?: string;
                group_section?: string;
                group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
                group_control_type?: string;
            } = {};
            if (this.group_name != null) {
                data.group_name = this.group_name;
            }
            if (this.group_type != null) {
                data.group_type = this.group_type;
            }
            if (this.group_room != null) {
                data.group_room = this.group_room;
            }
            if (this.group_section != null) {
                data.group_section = this.group_section;
            }
            if (this.group_icon != null) {
                data.group_icon = this.group_icon;
            }
            if (this.group_control_type != null) {
                data.group_control_type = this.group_control_type;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_name.length)
                writer.writeString(1, this.group_name);
            if (this.group_type.length)
                writer.writeString(2, this.group_type);
            if (this.group_room.length)
                writer.writeString(3, this.group_room);
            if (this.group_section.length)
                writer.writeString(4, this.group_section);
            if (this.group_icon != dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT)
                writer.writeEnum(5, this.group_icon);
            if (this.group_control_type.length)
                writer.writeString(6, this.group_control_type);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_name = reader.readString();
                        break;
                    case 2:
                        message.group_type = reader.readString();
                        break;
                    case 3:
                        message.group_room = reader.readString();
                        break;
                    case 4:
                        message.group_section = reader.readString();
                        break;
                    case 5:
                        message.group_icon = reader.readEnum();
                        break;
                    case 6:
                        message.group_control_type = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateGMGroup {
            return CreateGMGroup.deserialize(bytes);
        }
    }
    export class CreateGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            group?: GMGroup;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
                if ("group" in data && data.group != undefined) {
                    this.group = data.group;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get group() {
            return pb_1.Message.getWrapperField(this, GMGroup, 5) as GMGroup;
        }
        set group(value: GMGroup) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_group() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            group?: ReturnType<typeof GMGroup.prototype.toObject>;
        }): CreateGMGroupResponse {
            const message = new CreateGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            if (data.group != null) {
                message.group = GMGroup.fromObject(data.group);
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
                group?: ReturnType<typeof GMGroup.prototype.toObject>;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            if (this.group != null) {
                data.group = this.group.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (this.has_group)
                writer.writeMessage(5, this.group, () => this.group.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.group, () => message.group = GMGroup.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateGMGroupResponse {
            return CreateGMGroupResponse.deserialize(bytes);
        }
    }
    export class AddApplianceToGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            appliance_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("appliance_id" in data && data.appliance_id != undefined) {
                    this.appliance_id = data.appliance_id;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get appliance_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set appliance_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_id?: string;
            appliance_id?: string;
        }): AddApplianceToGMGroup {
            const message = new AddApplianceToGMGroup({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.appliance_id != null) {
                message.appliance_id = data.appliance_id;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                appliance_id?: string;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.appliance_id != null) {
                data.appliance_id = this.appliance_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.appliance_id.length)
                writer.writeString(2, this.appliance_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AddApplianceToGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AddApplianceToGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.appliance_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AddApplianceToGMGroup {
            return AddApplianceToGMGroup.deserialize(bytes);
        }
    }
    export class AddApplianceToGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): AddApplianceToGMGroupResponse {
            const message = new AddApplianceToGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AddApplianceToGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AddApplianceToGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AddApplianceToGMGroupResponse {
            return AddApplianceToGMGroupResponse.deserialize(bytes);
        }
    }
    export class RemoveApplianceFromGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            appliance_id?: string;
            force_remove?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("appliance_id" in data && data.appliance_id != undefined) {
                    this.appliance_id = data.appliance_id;
                }
                if ("force_remove" in data && data.force_remove != undefined) {
                    this.force_remove = data.force_remove;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get appliance_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set appliance_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get force_remove() {
            return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
        }
        set force_remove(value: boolean) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            group_id?: string;
            appliance_id?: string;
            force_remove?: boolean;
        }): RemoveApplianceFromGMGroup {
            const message = new RemoveApplianceFromGMGroup({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.appliance_id != null) {
                message.appliance_id = data.appliance_id;
            }
            if (data.force_remove != null) {
                message.force_remove = data.force_remove;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                appliance_id?: string;
                force_remove?: boolean;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.appliance_id != null) {
                data.appliance_id = this.appliance_id;
            }
            if (this.force_remove != null) {
                data.force_remove = this.force_remove;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.appliance_id.length)
                writer.writeString(2, this.appliance_id);
            if (this.force_remove != false)
                writer.writeBool(3, this.force_remove);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RemoveApplianceFromGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RemoveApplianceFromGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.appliance_id = reader.readString();
                        break;
                    case 3:
                        message.force_remove = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RemoveApplianceFromGMGroup {
            return RemoveApplianceFromGMGroup.deserialize(bytes);
        }
    }
    export class RemoveApplianceFromGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): RemoveApplianceFromGMGroupResponse {
            const message = new RemoveApplianceFromGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RemoveApplianceFromGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RemoveApplianceFromGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RemoveApplianceFromGMGroupResponse {
            return RemoveApplianceFromGMGroupResponse.deserialize(bytes);
        }
    }
    export class RenameGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_name?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_name" in data && data.group_name != undefined) {
                    this.group_name = data.group_name;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_id?: string;
            group_name?: string;
        }): RenameGMGroup {
            const message = new RenameGMGroup({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_name != null) {
                message.group_name = data.group_name;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_name?: string;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_name != null) {
                data.group_name = this.group_name;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.group_name.length)
                writer.writeString(2, this.group_name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RenameGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RenameGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.group_name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RenameGMGroup {
            return RenameGMGroup.deserialize(bytes);
        }
    }
    export class RenameGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): RenameGMGroupResponse {
            const message = new RenameGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RenameGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RenameGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RenameGMGroupResponse {
            return RenameGMGroupResponse.deserialize(bytes);
        }
    }
    export class MoveGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_room?: string;
            group_section?: string;
            force_move?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_room" in data && data.group_room != undefined) {
                    this.group_room = data.group_room;
                }
                if ("group_section" in data && data.group_section != undefined) {
                    this.group_section = data.group_section;
                }
                if ("force_move" in data && data.force_move != undefined) {
                    this.force_move = data.force_move;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_room() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_room(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get group_section() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set group_section(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get force_move() {
            return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
        }
        set force_move(value: boolean) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            group_id?: string;
            group_room?: string;
            group_section?: string;
            force_move?: boolean;
        }): MoveGMGroup {
            const message = new MoveGMGroup({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_room != null) {
                message.group_room = data.group_room;
            }
            if (data.group_section != null) {
                message.group_section = data.group_section;
            }
            if (data.force_move != null) {
                message.force_move = data.force_move;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_room?: string;
                group_section?: string;
                force_move?: boolean;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_room != null) {
                data.group_room = this.group_room;
            }
            if (this.group_section != null) {
                data.group_section = this.group_section;
            }
            if (this.force_move != null) {
                data.force_move = this.force_move;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.group_room.length)
                writer.writeString(2, this.group_room);
            if (this.group_section.length)
                writer.writeString(3, this.group_section);
            if (this.force_move != false)
                writer.writeBool(4, this.force_move);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MoveGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MoveGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.group_room = reader.readString();
                        break;
                    case 3:
                        message.group_section = reader.readString();
                        break;
                    case 4:
                        message.force_move = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MoveGMGroup {
            return MoveGMGroup.deserialize(bytes);
        }
    }
    export class MoveGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): MoveGMGroupResponse {
            const message = new MoveGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MoveGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MoveGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MoveGMGroupResponse {
            return MoveGMGroupResponse.deserialize(bytes);
        }
    }
    export class ConfigureGMGroupProperties extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_properties?: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_properties" in data && data.group_properties != undefined) {
                    this.group_properties = data.group_properties;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_properties() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMAppliancePropertiesInfo, 2) as dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }
        set group_properties(value: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_properties() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_id?: string;
            group_properties?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
        }): ConfigureGMGroupProperties {
            const message = new ConfigureGMGroupProperties({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_properties != null) {
                message.group_properties = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.fromObject(data.group_properties);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_properties?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_properties != null) {
                data.group_properties = this.group_properties.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.has_group_properties)
                writer.writeMessage(2, this.group_properties, () => this.group_properties.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ConfigureGMGroupProperties {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ConfigureGMGroupProperties();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_properties, () => message.group_properties = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ConfigureGMGroupProperties {
            return ConfigureGMGroupProperties.deserialize(bytes);
        }
    }
    export class ConfigureGMGroupPropertiesResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            job_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
                if ("job_id" in data && data.job_id != undefined) {
                    this.job_id = data.job_id;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get job_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set job_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            job_id?: string;
        }): ConfigureGMGroupPropertiesResponse {
            const message = new ConfigureGMGroupPropertiesResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            if (data.job_id != null) {
                message.job_id = data.job_id;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
                job_id?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            if (this.job_id != null) {
                data.job_id = this.job_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (this.job_id.length)
                writer.writeString(5, this.job_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ConfigureGMGroupPropertiesResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ConfigureGMGroupPropertiesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    case 5:
                        message.job_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ConfigureGMGroupPropertiesResponse {
            return ConfigureGMGroupPropertiesResponse.deserialize(bytes);
        }
    }
    export class SetGMGroupDefaultState extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_properties?: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_properties" in data && data.group_properties != undefined) {
                    this.group_properties = data.group_properties;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_properties() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMAppliancePropertiesInfo, 2) as dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }
        set group_properties(value: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_properties() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_id?: string;
            group_properties?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
        }): SetGMGroupDefaultState {
            const message = new SetGMGroupDefaultState({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_properties != null) {
                message.group_properties = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.fromObject(data.group_properties);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_properties?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_properties != null) {
                data.group_properties = this.group_properties.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.has_group_properties)
                writer.writeMessage(2, this.group_properties, () => this.group_properties.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupDefaultState {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupDefaultState();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_properties, () => message.group_properties = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupDefaultState {
            return SetGMGroupDefaultState.deserialize(bytes);
        }
    }
    export class SetGMGroupDefaultStateResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            job_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
                if ("job_id" in data && data.job_id != undefined) {
                    this.job_id = data.job_id;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get job_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set job_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            job_id?: string;
        }): SetGMGroupDefaultStateResponse {
            const message = new SetGMGroupDefaultStateResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            if (data.job_id != null) {
                message.job_id = data.job_id;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
                job_id?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            if (this.job_id != null) {
                data.job_id = this.job_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (this.job_id.length)
                writer.writeString(5, this.job_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupDefaultStateResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupDefaultStateResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    case 5:
                        message.job_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupDefaultStateResponse {
            return SetGMGroupDefaultStateResponse.deserialize(bytes);
        }
    }
    export class SetGMGroupState extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_state?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
            group_activity_info?: dependency_6.com.keus.gateway.ActivitySourceInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_state" in data && data.group_state != undefined) {
                    this.group_state = data.group_state;
                }
                if ("group_activity_info" in data && data.group_activity_info != undefined) {
                    this.group_activity_info = data.group_activity_info;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_state() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 2) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_state() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get group_activity_info() {
            return pb_1.Message.getWrapperField(this, dependency_6.com.keus.gateway.ActivitySourceInfo, 3) as dependency_6.com.keus.gateway.ActivitySourceInfo;
        }
        set group_activity_info(value: dependency_6.com.keus.gateway.ActivitySourceInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_activity_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_id?: string;
            group_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
        }): SetGMGroupState {
            const message = new SetGMGroupState({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_state != null) {
                message.group_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state);
            }
            if (data.group_activity_info != null) {
                message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.fromObject(data.group_activity_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_state?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
                group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_state != null) {
                data.group_state = this.group_state.toObject();
            }
            if (this.group_activity_info != null) {
                data.group_activity_info = this.group_activity_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.has_group_state)
                writer.writeMessage(2, this.group_state, () => this.group_state.serialize(writer));
            if (this.has_group_activity_info)
                writer.writeMessage(3, this.group_activity_info, () => this.group_activity_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupState {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupState();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_state, () => message.group_state = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.group_activity_info, () => message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupState {
            return SetGMGroupState.deserialize(bytes);
        }
    }
    export class SetGMGroupStateResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): SetGMGroupStateResponse {
            const message = new SetGMGroupStateResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupStateResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupStateResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupStateResponse {
            return SetGMGroupStateResponse.deserialize(bytes);
        }
    }
    export class SetGMGroupVoiceName extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_voice_name?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_voice_name" in data && data.group_voice_name != undefined) {
                    this.group_voice_name = data.group_voice_name;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_voice_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_voice_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_id?: string;
            group_voice_name?: string;
        }): SetGMGroupVoiceName {
            const message = new SetGMGroupVoiceName({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_voice_name != null) {
                message.group_voice_name = data.group_voice_name;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_voice_name?: string;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_voice_name != null) {
                data.group_voice_name = this.group_voice_name;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.group_voice_name.length)
                writer.writeString(2, this.group_voice_name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupVoiceName {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupVoiceName();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.group_voice_name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupVoiceName {
            return SetGMGroupVoiceName.deserialize(bytes);
        }
    }
    export class SetGMGroupVoiceNameResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): SetGMGroupVoiceNameResponse {
            const message = new SetGMGroupVoiceNameResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupVoiceNameResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupVoiceNameResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupVoiceNameResponse {
            return SetGMGroupVoiceNameResponse.deserialize(bytes);
        }
    }
    export class SetGMGroupVoiceDiscoverable extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            discover_group?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("discover_group" in data && data.discover_group != undefined) {
                    this.discover_group = data.discover_group;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get discover_group() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set discover_group(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_id?: string;
            discover_group?: boolean;
        }): SetGMGroupVoiceDiscoverable {
            const message = new SetGMGroupVoiceDiscoverable({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.discover_group != null) {
                message.discover_group = data.discover_group;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                discover_group?: boolean;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.discover_group != null) {
                data.discover_group = this.discover_group;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.discover_group != false)
                writer.writeBool(2, this.discover_group);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupVoiceDiscoverable {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupVoiceDiscoverable();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.discover_group = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupVoiceDiscoverable {
            return SetGMGroupVoiceDiscoverable.deserialize(bytes);
        }
    }
    export class SetGMGroupVoiceDiscoverableResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): SetGMGroupVoiceDiscoverableResponse {
            const message = new SetGMGroupVoiceDiscoverableResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupVoiceDiscoverableResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupVoiceDiscoverableResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupVoiceDiscoverableResponse {
            return SetGMGroupVoiceDiscoverableResponse.deserialize(bytes);
        }
    }
    export class DeleteGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            force_delete?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("force_delete" in data && data.force_delete != undefined) {
                    this.force_delete = data.force_delete;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get force_delete() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set force_delete(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_id?: string;
            force_delete?: boolean;
        }): DeleteGMGroup {
            const message = new DeleteGMGroup({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.force_delete != null) {
                message.force_delete = data.force_delete;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                force_delete?: boolean;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.force_delete != null) {
                data.force_delete = this.force_delete;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.force_delete != false)
                writer.writeBool(2, this.force_delete);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.force_delete = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteGMGroup {
            return DeleteGMGroup.deserialize(bytes);
        }
    }
    export class DeleteGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            job_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
                if ("job_id" in data && data.job_id != undefined) {
                    this.job_id = data.job_id;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get job_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set job_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            job_id?: string;
        }): DeleteGMGroupResponse {
            const message = new DeleteGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            if (data.job_id != null) {
                message.job_id = data.job_id;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
                job_id?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            if (this.job_id != null) {
                data.job_id = this.job_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (this.job_id.length)
                writer.writeString(5, this.job_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    case 5:
                        message.job_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteGMGroupResponse {
            return DeleteGMGroupResponse.deserialize(bytes);
        }
    }
    export class SetGMGroupIcon extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_icon" in data && data.group_icon != undefined) {
                    this.group_icon = data.group_icon;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_icon() {
            return pb_1.Message.getFieldWithDefault(this, 2, dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT) as dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }
        set group_icon(value: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_id?: string;
            group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
        }): SetGMGroupIcon {
            const message = new SetGMGroupIcon({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_icon != null) {
                message.group_icon = data.group_icon;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_icon?: dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_icon != null) {
                data.group_icon = this.group_icon;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.group_icon != dependency_5.com.keus.gateway.GROUP_APPLIANCE_ICONS.GROUP_DOWNLIGHT)
                writer.writeEnum(2, this.group_icon);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupIcon {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupIcon();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        message.group_icon = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupIcon {
            return SetGMGroupIcon.deserialize(bytes);
        }
    }
    export class SetGMGroupIconResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): SetGMGroupIconResponse {
            const message = new SetGMGroupIconResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SetGMGroupIconResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetGMGroupIconResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SetGMGroupIconResponse {
            return SetGMGroupIconResponse.deserialize(bytes);
        }
    }
    export class ReportGMGroupActivity extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: string;
            group_state_info?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
            group_activity_info?: dependency_6.com.keus.gateway.ActivitySourceInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("group_state_info" in data && data.group_state_info != undefined) {
                    this.group_state_info = data.group_state_info;
                }
                if ("group_activity_info" in data && data.group_activity_info != undefined) {
                    this.group_activity_info = data.group_activity_info;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_state_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 2) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state_info(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_state_info() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get group_activity_info() {
            return pb_1.Message.getWrapperField(this, dependency_6.com.keus.gateway.ActivitySourceInfo, 3) as dependency_6.com.keus.gateway.ActivitySourceInfo;
        }
        set group_activity_info(value: dependency_6.com.keus.gateway.ActivitySourceInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_activity_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_id?: string;
            group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
        }): ReportGMGroupActivity {
            const message = new ReportGMGroupActivity({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.group_state_info != null) {
                message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state_info);
            }
            if (data.group_activity_info != null) {
                message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.fromObject(data.group_activity_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: string;
                group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
                group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.group_state_info != null) {
                data.group_state_info = this.group_state_info.toObject();
            }
            if (this.group_activity_info != null) {
                data.group_activity_info = this.group_activity_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id.length)
                writer.writeString(1, this.group_id);
            if (this.has_group_state_info)
                writer.writeMessage(2, this.group_state_info, () => this.group_state_info.serialize(writer));
            if (this.has_group_activity_info)
                writer.writeMessage(3, this.group_activity_info, () => this.group_activity_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReportGMGroupActivity {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReportGMGroupActivity();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.group_state_info, () => message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.group_activity_info, () => message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReportGMGroupActivity {
            return ReportGMGroupActivity.deserialize(bytes);
        }
    }
    export class ReportGMGroupActivityResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): ReportGMGroupActivityResponse {
            const message = new ReportGMGroupActivityResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReportGMGroupActivityResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReportGMGroupActivityResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReportGMGroupActivityResponse {
            return ReportGMGroupActivityResponse.deserialize(bytes);
        }
    }
    export class GMGroupControlEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_identifier?: GMGroupIdentifier;
            group_state_info?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
            group_activity_info?: dependency_6.com.keus.gateway.ActivitySourceInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("group_state_info" in data && data.group_state_info != undefined) {
                    this.group_state_info = data.group_state_info;
                }
                if ("group_activity_info" in data && data.group_activity_info != undefined) {
                    this.group_activity_info = data.group_activity_info;
                }
            }
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 1) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get group_state_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 2) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state_info(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_group_state_info() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get group_activity_info() {
            return pb_1.Message.getWrapperField(this, dependency_6.com.keus.gateway.ActivitySourceInfo, 3) as dependency_6.com.keus.gateway.ActivitySourceInfo;
        }
        set group_activity_info(value: dependency_6.com.keus.gateway.ActivitySourceInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_activity_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
        }): GMGroupControlEvent {
            const message = new GMGroupControlEvent({});
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.group_state_info != null) {
                message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state_info);
            }
            if (data.group_activity_info != null) {
                message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.fromObject(data.group_activity_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
                group_activity_info?: ReturnType<typeof dependency_6.com.keus.gateway.ActivitySourceInfo.prototype.toObject>;
            } = {};
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.group_state_info != null) {
                data.group_state_info = this.group_state_info.toObject();
            }
            if (this.group_activity_info != null) {
                data.group_activity_info = this.group_activity_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_identifier)
                writer.writeMessage(1, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.has_group_state_info)
                writer.writeMessage(2, this.group_state_info, () => this.group_state_info.serialize(writer));
            if (this.has_group_activity_info)
                writer.writeMessage(3, this.group_activity_info, () => this.group_activity_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupControlEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupControlEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.group_state_info, () => message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.group_activity_info, () => message.group_activity_info = dependency_6.com.keus.gateway.ActivitySourceInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupControlEvent {
            return GMGroupControlEvent.deserialize(bytes);
        }
    }
    export class GMGroupConfigureEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_identifier?: GMGroupIdentifier;
            group_appliance_info?: GMGroupApplianceInfo[];
            group_properties_info?: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("group_appliance_info" in data && data.group_appliance_info != undefined) {
                    this.group_appliance_info = data.group_appliance_info;
                }
                if ("group_properties_info" in data && data.group_properties_info != undefined) {
                    this.group_properties_info = data.group_properties_info;
                }
            }
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 1) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get group_appliance_info() {
            return pb_1.Message.getRepeatedWrapperField(this, GMGroupApplianceInfo, 2) as GMGroupApplianceInfo[];
        }
        set group_appliance_info(value: GMGroupApplianceInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get group_properties_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMAppliancePropertiesInfo, 3) as dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }
        set group_properties_info(value: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_properties_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            group_appliance_info?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
            group_properties_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
        }): GMGroupConfigureEvent {
            const message = new GMGroupConfigureEvent({});
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.group_appliance_info != null) {
                message.group_appliance_info = data.group_appliance_info.map(item => GMGroupApplianceInfo.fromObject(item));
            }
            if (data.group_properties_info != null) {
                message.group_properties_info = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.fromObject(data.group_properties_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                group_appliance_info?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
                group_properties_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
            } = {};
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.group_appliance_info != null) {
                data.group_appliance_info = this.group_appliance_info.map((item: GMGroupApplianceInfo) => item.toObject());
            }
            if (this.group_properties_info != null) {
                data.group_properties_info = this.group_properties_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_identifier)
                writer.writeMessage(1, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.group_appliance_info.length)
                writer.writeRepeatedMessage(2, this.group_appliance_info, (item: GMGroupApplianceInfo) => item.serialize(writer));
            if (this.has_group_properties_info)
                writer.writeMessage(3, this.group_properties_info, () => this.group_properties_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupConfigureEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupConfigureEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.group_appliance_info, () => pb_1.Message.addToRepeatedWrapperField(message, 2, GMGroupApplianceInfo.deserialize(reader), GMGroupApplianceInfo));
                        break;
                    case 3:
                        reader.readMessage(message.group_properties_info, () => message.group_properties_info = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupConfigureEvent {
            return GMGroupConfigureEvent.deserialize(bytes);
        }
    }
    export class GMGroupSetDefaultStateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_identifier?: GMGroupIdentifier;
            group_appliance_info?: GMGroupApplianceInfo[];
            group_properties_info?: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("group_appliance_info" in data && data.group_appliance_info != undefined) {
                    this.group_appliance_info = data.group_appliance_info;
                }
                if ("group_properties_info" in data && data.group_properties_info != undefined) {
                    this.group_properties_info = data.group_properties_info;
                }
            }
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 1) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get group_appliance_info() {
            return pb_1.Message.getRepeatedWrapperField(this, GMGroupApplianceInfo, 2) as GMGroupApplianceInfo[];
        }
        set group_appliance_info(value: GMGroupApplianceInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get group_properties_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMAppliancePropertiesInfo, 3) as dependency_7.com.keus.gateway.GMAppliancePropertiesInfo;
        }
        set group_properties_info(value: dependency_7.com.keus.gateway.GMAppliancePropertiesInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_properties_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            group_appliance_info?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
            group_properties_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
        }): GMGroupSetDefaultStateEvent {
            const message = new GMGroupSetDefaultStateEvent({});
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.group_appliance_info != null) {
                message.group_appliance_info = data.group_appliance_info.map(item => GMGroupApplianceInfo.fromObject(item));
            }
            if (data.group_properties_info != null) {
                message.group_properties_info = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.fromObject(data.group_properties_info);
            }
            return message;
        }
        toObject() {
            const data: {
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                group_appliance_info?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
                group_properties_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.prototype.toObject>;
            } = {};
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.group_appliance_info != null) {
                data.group_appliance_info = this.group_appliance_info.map((item: GMGroupApplianceInfo) => item.toObject());
            }
            if (this.group_properties_info != null) {
                data.group_properties_info = this.group_properties_info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_identifier)
                writer.writeMessage(1, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.group_appliance_info.length)
                writer.writeRepeatedMessage(2, this.group_appliance_info, (item: GMGroupApplianceInfo) => item.serialize(writer));
            if (this.has_group_properties_info)
                writer.writeMessage(3, this.group_properties_info, () => this.group_properties_info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupSetDefaultStateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupSetDefaultStateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.group_appliance_info, () => pb_1.Message.addToRepeatedWrapperField(message, 2, GMGroupApplianceInfo.deserialize(reader), GMGroupApplianceInfo));
                        break;
                    case 3:
                        reader.readMessage(message.group_properties_info, () => message.group_properties_info = dependency_7.com.keus.gateway.GMAppliancePropertiesInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupSetDefaultStateEvent {
            return GMGroupSetDefaultStateEvent.deserialize(bytes);
        }
    }
    export class GMGroupDeleteEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_identifier?: GMGroupIdentifier;
            delete_success?: boolean;
            message?: string;
            ops_message?: string;
            group_appliance_info?: GMGroupApplianceInfo[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("delete_success" in data && data.delete_success != undefined) {
                    this.delete_success = data.delete_success;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
                if ("group_appliance_info" in data && data.group_appliance_info != undefined) {
                    this.group_appliance_info = data.group_appliance_info;
                }
            }
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 1) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get delete_success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set delete_success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get group_appliance_info() {
            return pb_1.Message.getRepeatedWrapperField(this, GMGroupApplianceInfo, 5) as GMGroupApplianceInfo[];
        }
        set group_appliance_info(value: GMGroupApplianceInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 5, value);
        }
        static fromObject(data: {
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            delete_success?: boolean;
            message?: string;
            ops_message?: string;
            group_appliance_info?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
        }): GMGroupDeleteEvent {
            const message = new GMGroupDeleteEvent({});
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.delete_success != null) {
                message.delete_success = data.delete_success;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            if (data.group_appliance_info != null) {
                message.group_appliance_info = data.group_appliance_info.map(item => GMGroupApplianceInfo.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                delete_success?: boolean;
                message?: string;
                ops_message?: string;
                group_appliance_info?: ReturnType<typeof GMGroupApplianceInfo.prototype.toObject>[];
            } = {};
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.delete_success != null) {
                data.delete_success = this.delete_success;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            if (this.group_appliance_info != null) {
                data.group_appliance_info = this.group_appliance_info.map((item: GMGroupApplianceInfo) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_identifier)
                writer.writeMessage(1, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.delete_success != false)
                writer.writeBool(2, this.delete_success);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (this.group_appliance_info.length)
                writer.writeRepeatedMessage(5, this.group_appliance_info, (item: GMGroupApplianceInfo) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GMGroupDeleteEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GMGroupDeleteEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 2:
                        message.delete_success = reader.readBool();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.group_appliance_info, () => pb_1.Message.addToRepeatedWrapperField(message, 5, GMGroupApplianceInfo.deserialize(reader), GMGroupApplianceInfo));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GMGroupDeleteEvent {
            return GMGroupDeleteEvent.deserialize(bytes);
        }
    }
    export class AddGroupSavedState extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_saved_state_action?: GMGroupSavedStateAction;
            group_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_saved_state_action" in data && data.group_saved_state_action != undefined) {
                    this.group_saved_state_action = data.group_saved_state_action;
                }
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get group_saved_state_action() {
            return pb_1.Message.getWrapperField(this, GMGroupSavedStateAction, 1) as GMGroupSavedStateAction;
        }
        set group_saved_state_action(value: GMGroupSavedStateAction) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_saved_state_action() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_saved_state_action?: ReturnType<typeof GMGroupSavedStateAction.prototype.toObject>;
            group_id?: string;
        }): AddGroupSavedState {
            const message = new AddGroupSavedState({});
            if (data.group_saved_state_action != null) {
                message.group_saved_state_action = GMGroupSavedStateAction.fromObject(data.group_saved_state_action);
            }
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                group_saved_state_action?: ReturnType<typeof GMGroupSavedStateAction.prototype.toObject>;
                group_id?: string;
            } = {};
            if (this.group_saved_state_action != null) {
                data.group_saved_state_action = this.group_saved_state_action.toObject();
            }
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_saved_state_action)
                writer.writeMessage(1, this.group_saved_state_action, () => this.group_saved_state_action.serialize(writer));
            if (this.group_id.length)
                writer.writeString(2, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AddGroupSavedState {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AddGroupSavedState();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_saved_state_action, () => message.group_saved_state_action = GMGroupSavedStateAction.deserialize(reader));
                        break;
                    case 2:
                        message.group_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AddGroupSavedState {
            return AddGroupSavedState.deserialize(bytes);
        }
    }
    export class AddGroupSavedStateResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            saved_state_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
                if ("saved_state_id" in data && data.saved_state_id != undefined) {
                    this.saved_state_id = data.saved_state_id;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get saved_state_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set saved_state_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
            saved_state_id?: string;
        }): AddGroupSavedStateResponse {
            const message = new AddGroupSavedStateResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            if (data.saved_state_id != null) {
                message.saved_state_id = data.saved_state_id;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
                saved_state_id?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            if (this.saved_state_id != null) {
                data.saved_state_id = this.saved_state_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (this.saved_state_id.length)
                writer.writeString(5, this.saved_state_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AddGroupSavedStateResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AddGroupSavedStateResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    case 5:
                        message.saved_state_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AddGroupSavedStateResponse {
            return AddGroupSavedStateResponse.deserialize(bytes);
        }
    }
    export class DeleteGroupSavedState extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            saved_state_id?: string;
            group_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("saved_state_id" in data && data.saved_state_id != undefined) {
                    this.saved_state_id = data.saved_state_id;
                }
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get saved_state_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set saved_state_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            saved_state_id?: string;
            group_id?: string;
        }): DeleteGroupSavedState {
            const message = new DeleteGroupSavedState({});
            if (data.saved_state_id != null) {
                message.saved_state_id = data.saved_state_id;
            }
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                saved_state_id?: string;
                group_id?: string;
            } = {};
            if (this.saved_state_id != null) {
                data.saved_state_id = this.saved_state_id;
            }
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.saved_state_id.length)
                writer.writeString(1, this.saved_state_id);
            if (this.group_id.length)
                writer.writeString(2, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteGroupSavedState {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteGroupSavedState();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.saved_state_id = reader.readString();
                        break;
                    case 2:
                        message.group_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteGroupSavedState {
            return DeleteGroupSavedState.deserialize(bytes);
        }
    }
    export class DeleteGroupSavedStateResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): DeleteGroupSavedStateResponse {
            const message = new DeleteGroupSavedStateResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteGroupSavedStateResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteGroupSavedStateResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteGroupSavedStateResponse {
            return DeleteGroupSavedStateResponse.deserialize(bytes);
        }
    }
    export class EditGroupSavedState extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_saved_state_action?: GMGroupSavedStateAction;
            group_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_saved_state_action" in data && data.group_saved_state_action != undefined) {
                    this.group_saved_state_action = data.group_saved_state_action;
                }
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get group_saved_state_action() {
            return pb_1.Message.getWrapperField(this, GMGroupSavedStateAction, 1) as GMGroupSavedStateAction;
        }
        set group_saved_state_action(value: GMGroupSavedStateAction) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_saved_state_action() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_saved_state_action?: ReturnType<typeof GMGroupSavedStateAction.prototype.toObject>;
            group_id?: string;
        }): EditGroupSavedState {
            const message = new EditGroupSavedState({});
            if (data.group_saved_state_action != null) {
                message.group_saved_state_action = GMGroupSavedStateAction.fromObject(data.group_saved_state_action);
            }
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                group_saved_state_action?: ReturnType<typeof GMGroupSavedStateAction.prototype.toObject>;
                group_id?: string;
            } = {};
            if (this.group_saved_state_action != null) {
                data.group_saved_state_action = this.group_saved_state_action.toObject();
            }
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_saved_state_action)
                writer.writeMessage(1, this.group_saved_state_action, () => this.group_saved_state_action.serialize(writer));
            if (this.group_id.length)
                writer.writeString(2, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EditGroupSavedState {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EditGroupSavedState();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_saved_state_action, () => message.group_saved_state_action = GMGroupSavedStateAction.deserialize(reader));
                        break;
                    case 2:
                        message.group_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): EditGroupSavedState {
            return EditGroupSavedState.deserialize(bytes);
        }
    }
    export class EditGroupSavedStateResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): EditGroupSavedStateResponse {
            const message = new EditGroupSavedStateResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EditGroupSavedStateResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EditGroupSavedStateResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): EditGroupSavedStateResponse {
            return EditGroupSavedStateResponse.deserialize(bytes);
        }
    }
    export class ReportGmGroupSystemActivity extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
            area_id?: number;
            group_state_info?: dependency_7.com.keus.gateway.GMApplianceStateInfo;
            activity_time?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("area_id" in data && data.area_id != undefined) {
                    this.area_id = data.area_id;
                }
                if ("group_state_info" in data && data.group_state_info != undefined) {
                    this.group_state_info = data.group_state_info;
                }
                if ("activity_time" in data && data.activity_time != undefined) {
                    this.activity_time = data.activity_time;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get area_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set area_id(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get group_state_info() {
            return pb_1.Message.getWrapperField(this, dependency_7.com.keus.gateway.GMApplianceStateInfo, 3) as dependency_7.com.keus.gateway.GMApplianceStateInfo;
        }
        set group_state_info(value: dependency_7.com.keus.gateway.GMApplianceStateInfo) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_group_state_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get activity_time() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set activity_time(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            group_id?: number;
            area_id?: number;
            group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
            activity_time?: number;
        }): ReportGmGroupSystemActivity {
            const message = new ReportGmGroupSystemActivity({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.area_id != null) {
                message.area_id = data.area_id;
            }
            if (data.group_state_info != null) {
                message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.fromObject(data.group_state_info);
            }
            if (data.activity_time != null) {
                message.activity_time = data.activity_time;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
                area_id?: number;
                group_state_info?: ReturnType<typeof dependency_7.com.keus.gateway.GMApplianceStateInfo.prototype.toObject>;
                activity_time?: number;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.area_id != null) {
                data.area_id = this.area_id;
            }
            if (this.group_state_info != null) {
                data.group_state_info = this.group_state_info.toObject();
            }
            if (this.activity_time != null) {
                data.activity_time = this.activity_time;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint32(1, this.group_id);
            if (this.area_id != 0)
                writer.writeUint32(2, this.area_id);
            if (this.has_group_state_info)
                writer.writeMessage(3, this.group_state_info, () => this.group_state_info.serialize(writer));
            if (this.activity_time != 0)
                writer.writeUint64(4, this.activity_time);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReportGmGroupSystemActivity {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReportGmGroupSystemActivity();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint32();
                        break;
                    case 2:
                        message.area_id = reader.readUint32();
                        break;
                    case 3:
                        reader.readMessage(message.group_state_info, () => message.group_state_info = dependency_7.com.keus.gateway.GMApplianceStateInfo.deserialize(reader));
                        break;
                    case 4:
                        message.activity_time = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReportGmGroupSystemActivity {
            return ReportGmGroupSystemActivity.deserialize(bytes);
        }
    }
    export class IdentifyGMGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_identifier?: GMGroupIdentifier;
            identify_on?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_identifier" in data && data.group_identifier != undefined) {
                    this.group_identifier = data.group_identifier;
                }
                if ("identify_on" in data && data.identify_on != undefined) {
                    this.identify_on = data.identify_on;
                }
            }
        }
        get group_identifier() {
            return pb_1.Message.getWrapperField(this, GMGroupIdentifier, 1) as GMGroupIdentifier;
        }
        set group_identifier(value: GMGroupIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_identifier() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get identify_on() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set identify_on(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
            identify_on?: boolean;
        }): IdentifyGMGroup {
            const message = new IdentifyGMGroup({});
            if (data.group_identifier != null) {
                message.group_identifier = GMGroupIdentifier.fromObject(data.group_identifier);
            }
            if (data.identify_on != null) {
                message.identify_on = data.identify_on;
            }
            return message;
        }
        toObject() {
            const data: {
                group_identifier?: ReturnType<typeof GMGroupIdentifier.prototype.toObject>;
                identify_on?: boolean;
            } = {};
            if (this.group_identifier != null) {
                data.group_identifier = this.group_identifier.toObject();
            }
            if (this.identify_on != null) {
                data.identify_on = this.identify_on;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_identifier)
                writer.writeMessage(1, this.group_identifier, () => this.group_identifier.serialize(writer));
            if (this.identify_on != false)
                writer.writeBool(2, this.identify_on);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): IdentifyGMGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IdentifyGMGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_identifier, () => message.group_identifier = GMGroupIdentifier.deserialize(reader));
                        break;
                    case 2:
                        message.identify_on = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): IdentifyGMGroup {
            return IdentifyGMGroup.deserialize(bytes);
        }
    }
    export class IdentifyGMGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("ops_message" in data && data.ops_message != undefined) {
                    this.ops_message = data.ops_message;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get ops_message() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ops_message(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            success?: boolean;
            code?: number;
            message?: string;
            ops_message?: string;
        }): IdentifyGMGroupResponse {
            const message = new IdentifyGMGroupResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.ops_message != null) {
                message.ops_message = data.ops_message;
            }
            return message;
        }
        toObject() {
            const data: {
                success?: boolean;
                code?: number;
                message?: string;
                ops_message?: string;
            } = {};
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.ops_message != null) {
                data.ops_message = this.ops_message;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (this.code != 0)
                writer.writeInt32(2, this.code);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.ops_message.length)
                writer.writeString(4, this.ops_message);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): IdentifyGMGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IdentifyGMGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    case 2:
                        message.code = reader.readInt32();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        message.ops_message = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): IdentifyGMGroupResponse {
            return IdentifyGMGroupResponse.deserialize(bytes);
        }
    }
}
